workspace(name = "nix_test")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

#
# Skylib
#

http_archive(
    name = "bazel_skylib",
    sha256 = "ca4e3b8e4da9266c3a9101c8f4704fe2e20eb5625b2a6a7d2d7d45e3dd4efffd",
    strip_prefix = "bazel-skylib-0.5.0",
    url = "https://github.com/bazelbuild/bazel-skylib/archive/0.5.0.zip",
)

#
# Golang
#

http_archive(
    name = "io_bazel_rules_go",
    sha256 = "8b68d0630d63d95dacc0016c3bb4b76154fe34fca93efd65d1c366de3fcb4294",
    url = "https://github.com/bazelbuild/rules_go/releases/download/0.12.1/rules_go-0.12.1.tar.gz",
)

http_archive(
    name = "bazel_gazelle",
    sha256 = "ddedc7aaeb61f2654d7d7d4fd7940052ea992ccdb031b8f9797ed143ac7e8d43",
    url = "https://github.com/bazelbuild/bazel-gazelle/releases/download/0.12.0/bazel-gazelle-0.12.0.tar.gz",
)

#
# Node
#

# http_archive(
#     name = "build_bazel_rules_nodejs",
#     sha256 = "634206524d90dc03c52392fa3f19a16637d2bcf154910436fe1d669a0d9d7b9c",
#     strip_prefix = "rules_nodejs-0.10.1",
#     url = "https://github.com/bazelbuild/rules_nodejs/archive/0.10.1.zip",
# )

# TODO: switch back to the bazelbuild/nodejs once the below PRs are merged
# - https://github.com/bazelbuild/rules_nodejs/pull/247
# - https://github.com/bazelbuild/rules_nodejs/pull/249
http_archive(
    name = "build_bazel_rules_nodejs",
    sha256 = "9b49e40a6605504205d5b6acf8447ecaae6aefe7bd8c4b9fed236b3db7005733",
    strip_prefix = "rules_nodejs-0798a13a5ce0e9da2ced57aeb0d01bc1676f8e57",
    url = "https://github.com/kalbasit/rules_nodejs/archive/0798a13a5ce0e9da2ced57aeb0d01bc1676f8e57.zip",
)

#
# WebTesting
#

http_archive(
    name = "io_bazel_rules_webtesting",
    sha256 = "15703fdc1db604a56c59196d7ff0467e99ede2623dcd92d0b3ea3544d2841982",
    strip_prefix = "rules_webtesting-ffdfc36c9ef0c096c05ebf7d898233bc491f4746",
    url = "https://github.com/bazelbuild/rules_webtesting/archive/ffdfc36c9ef0c096c05ebf7d898233bc491f4746.zip",
)

#
# Typescript
#

http_archive(
    name = "build_bazel_rules_typescript",
    sha256 = "a2b26ac3fc13036011196063db1bf7f1eae81334449201dc28087ebfa3708c99",
    strip_prefix = "rules_typescript-0.15.3",
    url = "https://github.com/bazelbuild/rules_typescript/archive/0.15.3.zip",
)

#
# Golang
#

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_register_toolchains",
    "go_rules_dependencies",
)

#
# Tools
#

http_archive(
    name = "com_github_bazelbuild_buildtools",
    sha256 = "ec495cbd19238c9dc488fd65ca1fee56dcb1a8d6d56ee69a49f2ebe69826c261",
    strip_prefix = "buildtools-0.12.0",
    url = "https://github.com/bazelbuild/buildtools/archive/0.12.0.zip",
)

go_rules_dependencies()

# The Go version here must match the version in .tool-versions
go_register_toolchains(go_version = "host")

load(
    "@bazel_gazelle//:deps.bzl",
    "gazelle_dependencies",
)

gazelle_dependencies()

#
# Node
#

load("@build_bazel_rules_nodejs//:defs.bzl", "node_repositories", "yarn_install")

# NOTE: this rule installs nodejs, npm, and yarn, but does NOT install
# your npm dependencies into your node_modules folder.
# You must still run the package manager to do this.
node_repositories(
    package_json = [
        "//:package.json",
    ],
)

yarn_install(
    name = "root_node_modules",
    package_json = "//:package.json",
    yarn_lock = "//:yarn.lock",
)

#
# WebTesting
#

load("@io_bazel_rules_webtesting//web:repositories.bzl", "browser_repositories", "web_test_repositories")

web_test_repositories()

browser_repositories(
    chromium = False,
    firefox = False,
)

#
# Typescript
#

load("@build_bazel_rules_typescript//:defs.bzl", "ts_setup_workspace")

ts_setup_workspace()

#
# Tools
#

load("@com_github_bazelbuild_buildtools//buildifier:deps.bzl", "buildifier_dependencies")

buildifier_dependencies()
